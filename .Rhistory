group_by(variable) %>%
summarise(med = median(value)),
aes(xintercept = med), linetype = 2, col = pal[5]) +
geom_vline(data = set2 %>%
gather(key = "variable", value = "value", -stno) %>%
group_by(variable) %>%
summarise(IQR1 = quantile(value, 0.25)),
aes(xintercept = IQR1), linetype = 2, col = pal[2]) +
geom_vline(data = set2 %>%
gather(key = "variable", value = "value", -stno) %>%
group_by(variable) %>%
summarise(IQR3 = quantile(value, 0.75)),
aes(xintercept = IQR3), linetype = 2, col = pal[2]) +
facet_wrap(~ variable, scales = "free") +
theme_bw() +
theme(strip.background = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank())
# > Save
ggsave(plot = p.hist.2,
filename = paste0("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\PCA-K-means-for-PA-features\\01_EXPLORATORY_ANALYSES\\plots\\p.hist.2_", sub(".* - ", "", names(.x)[2]), ".png"),
height = 6,
width = 12)
ggsave(plot = p.dens.2,
filename = paste0("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\PCA-K-means-for-PA-features\\01_EXPLORATORY_ANALYSES\\plots\\p.dens.2_", sub(".* - ", "", names(.x)[2]), ".png"),
height = 6,
width = 12)
})
# > Plots for comparision between week days and weekend days
# Histogram
ggplot() +
# > histogram week days vs weekend days
geom_histogram(data = data_named$WD_WE %>%
gather(key = "feature", value = "value", -stno) %>%
separate(feature, sep = " - ", into = c("feature", "day_type")),
aes(value, fill = day_type)) +
# > median and boxplot from all days
geom_vline(data = data_named$wei %>%
gather(key = "feature", value = "value", -stno) %>%
separate(feature, sep = " - ", into = c("feature", "day_type")) %>%
group_by(feature) %>%
summarise(med = median(value)),
aes(xintercept = med), linetype = 2, col = pal[1]) +
geom_boxplot(data = data_named$wei %>%
gather(key = "feature", value = "value", -stno) %>%
separate(feature, sep = " - ", into = c("feature", "day_type")),
aes(x = value, y = -100), width = 150, col = pal[1], fill = pal[2],
outlier.shape = NA) +
# > graphics settings
scale_fill_manual(values = c("grey", pal[3]),
name = "Day type") +
facet_wrap(~ feature, scales = "free") +
theme_bw() +
theme(strip.background = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
legend.position = "bottom")
# Density
ggplot() +
# > desnity week days vs weekend days
geom_density(data = data_named$WD_WE %>%
gather(key = "feature", value = "value", -stno) %>%
separate(feature, sep = " - ", into = c("feature", "day_type")),
aes(value, col = day_type, fill = day_type), alpha = 0.3) +
# > median and boxplot from all days
geom_vline(data = data_named$wei %>%
gather(key = "feature", value = "value", -stno) %>%
separate(feature, sep = " - ", into = c("feature", "day_type")) %>%
group_by(feature) %>%
summarise(med = median(value)),
aes(xintercept = med), linetype = 2, col = pal[1]) +
geom_vline(data = data_named$wei %>%
gather(key = "feature", value = "value", -stno) %>%
separate(feature, sep = " - ", into = c("feature", "day_type")) %>%
group_by(feature) %>%
summarise(IQR1 = quantile(value, 0.25)),
aes(xintercept = IQR1), linetype = 2, col = pal[2]) +
geom_vline(data = data_named$wei %>%
gather(key = "feature", value = "value", -stno) %>%
separate(feature, sep = " - ", into = c("feature", "day_type")) %>%
group_by(feature) %>%
summarise(IQR3 = quantile(value, 0.75)),
aes(xintercept = IQR3), linetype = 2, col = pal[2]) +
# > graphics settings
scale_color_manual(values = c("grey", pal[3]),
name = "Day type") +
scale_fill_manual(values = c("grey", pal[3]),
name = "Day type") +
facet_wrap(~ feature, scales = "free") +
theme_bw() +
theme(strip.background = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
legend.position = "bottom")
load("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\00_DATA\\tab_full_cov_s11")
load("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\00_DATA\\tab_full_cov_s11.rda")
# > To do
library(haven)
read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\04_DAILY_ACT_SUM\\2021-05-03\\data_03052021.dta")
tab_cov <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\04_DAILY_ACT_SUM\\2021-05-03\\data_03052021.dta")
names(tab_cov)
unique(data_named$wei$stno)
length(unique(data_named$wei$stno))
tab_cov <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\03_SCALAR_VAR\\data_L40M100_052020_forMathide.dta") %>% filter(stno %in% unique(data_named$wei$stno))
names(tab_cov)
load("E:\\PC_FIXE\\Analysis\\01_ARTICLE_1\\05_FINAL_ANALYSES_FIGURES_2\\PHASE_11\\Data\\tab_full_cov_s11.rda")
load("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\01_ARTICLE_1\\05_FINAL_ANALYSES_FIGURES_2\\PHASE_11\\Data\\tab_full_cov_s11.rda")
s11 <- tab_11 %>% select(stno, sex_2)
particip <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\particip.dta")
names(particip)
particip <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\s11quest.dta")
names(particip)
particip <- read_csv("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\S11screen_txt.csv")
names(particip)
particip <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\s1quest.dta")
particip <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\s1quest.dta") %>% filter(stno %in% unique(data_named$wei$stno))
particip <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\s1quest.dta") %>%
filter(stno %in% unique(data_named$wei$stno)) %>%
select(stno, sex)
particip
left_join(data_named$wei, by = "stno") %>%
gather(key = "feature", value = "value", -stno, -sex)
particip
left_join(data_named$wei, by = "stno")
particip %>%
left_join(data_named$wei, by = "stno") %>%
gather(key = "feature", value = "value", -stno, -sex)
# > Descriptive table of the (non-standardized) variables
desc.tab <- particip %>%
left_join(data_named$wei, by = "stno") %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
group_by(sex, feature) %>%
summarise(mean = mean(value),
sd = sd(value),
min = min(value),
q25 = quantile(value, probs = c(0.25)),
q50 = quantile(value, probs = c(0.5)),
q75 = quantile(value, probs = c(0.75)),
max = max(value)) %>%
arrange(day_type)
# > Descriptive table of the (non-standardized) variables
desc.tab <- particip %>%
left_join(data_named$wei, by = "stno") %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
group_by(sex, feature) %>%
summarise(mean = mean(value),
sd = sd(value),
min = min(value),
q25 = quantile(value, probs = c(0.25)),
q50 = quantile(value, probs = c(0.5)),
q75 = quantile(value, probs = c(0.75)),
max = max(value)) %>%
arrange(sex)
# > Descriptive table of the (non-standardized) variables
desc.tab.sex <- particip %>%
left_join(data_named$wei, by = "stno") %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
group_by(sex, feature) %>%
summarise(mean = mean(value),
sd = sd(value),
min = min(value),
q25 = quantile(value, probs = c(0.25)),
q50 = quantile(value, probs = c(0.5)),
q75 = quantile(value, probs = c(0.75)),
max = max(value)) %>%
arrange(sex)
desc.tab.sex
# > Descriptive table of the (non-standardized) variables
wei_sex <- particip %>%
left_join(data_named$wei, by = "stno")
wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex)
wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
split(.$feature)
wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
split(.$feature) %>%
map_dfr(~{
desc <- .x %>%
group_by(sex) %>%
summarise(mean = mean(value),
sd = sd(value),
min = min(value),
q25 = quantile(value, probs = c(0.25)),
q50 = quantile(value, probs = c(0.5)),
q75 = quantile(value, probs = c(0.75)),
max = max(value))
tab_men <- .x %>% filter(sex == 1)
tab_women <- .x %>% filter(sex == 2)
p.value <- data_frame(p.t.test = t.test(tab_men$value, tab_women$value)$p.value,
p.wilcoxon = wilcox.test(tab_men$value, tab_women$value)$p.value)
cbind(desc, p.value)
}, .id = "feature")
wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
split(.$feature) %>%
map_dfr(~{
desc <- .x %>%
group_by(sex) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "sex", value = "lab")
tab_men <- .x %>% filter(sex == 1)
tab_women <- .x %>% filter(sex == 2)
p.value <- data_frame(p.t.test = t.test(tab_men$value, tab_women$value)$p.value,
p.wilcoxon = wilcox.test(tab_men$value, tab_women$value)$p.value)
cbind(desc, p.value)
}, .id = "feature")
desc <- .x %>%
group_by(sex) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "sex", value = "lab") %>%
dplyr::rename("1" = "Men", "2" = "Women")
wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
split(.$feature) %>%
map_dfr(~{
desc <- .x %>%
group_by(sex) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "sex", value = "lab") %>%
dplyr::rename("1" = "Men", "2" = "Women")
tab_men <- .x %>% filter(sex == 1)
tab_women <- .x %>% filter(sex == 2)
p.value <- data_frame(p.t.test = t.test(tab_men$value, tab_women$value)$p.value,
p.wilcoxon = wilcox.test(tab_men$value, tab_women$value)$p.value) %>%
mutate(p.t.test.round   = if_else(format(round(p.t.test, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.t.test, digits = 4), nsmall = 3))),
p.wilcoxon.round = if_else(is.na(p.wilcoxon) == T, "NA", if_else(format(round(p.wilcoxon, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.wilcoxon, digits = 4), nsmall = 3)))))
cbind(desc, p.value)
}, .id = "feature")
wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
split(.$feature) %>%
map_dfr(~{
desc <- .x %>%
group_by(sex) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "sex", value = "lab") %>%
dplyr::rename("Men" = "1", "Women" = "2")
tab_men <- .x %>% filter(sex == 1)
tab_women <- .x %>% filter(sex == 2)
p.value <- data_frame(p.t.test = t.test(tab_men$value, tab_women$value)$p.value,
p.wilcoxon = wilcox.test(tab_men$value, tab_women$value)$p.value) %>%
mutate(p.t.test.round   = if_else(format(round(p.t.test, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.t.test, digits = 4), nsmall = 3))),
p.wilcoxon.round = if_else(is.na(p.wilcoxon) == T, "NA", if_else(format(round(p.wilcoxon, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.wilcoxon, digits = 4), nsmall = 3)))))
cbind(desc, p.value)
}, .id = "feature")
wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
split(.$feature) %>%
map_dfr(~{
desc <- .x %>%
group_by(sex) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "sex", value = "lab") %>%
dplyr::rename("Men" = "1", "Women" = "2")
tab_men <- .x %>% filter(sex == 1)
tab_women <- .x %>% filter(sex == 2)
p.value <- data_frame(p.t.test = t.test(tab_men$value, tab_women$value)$p.value,
p.wilcoxon = wilcox.test(tab_men$value, tab_women$value)$p.value) %>%
mutate(p.t.test.round   = if_else(format(round(p.t.test, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.t.test, digits = 4), nsmall = 3))),
p.wilcoxon.round = if_else(is.na(p.wilcoxon) == T, "NA", if_else(format(round(p.wilcoxon, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.wilcoxon, digits = 4), nsmall = 3)))))
cbind(desc, p.value) %>% select(-p.t.test, -p.wilcoxon)
}, .id = "feature")
wei_sex$`Acceleration (mg) - All days`
t.test(`Acceleration (mg) - All days`~sex, data = wei_sex, paired = T)$p.value
?t.test
wei_sex$sex
t.test(`Acceleration (mg) - All days`~ sex, data = wei_sex, paired = T)
noch4 = data.frame(Diarrhea = as.numeric(rpois(237,50)), Max_by_90_H2SPos_12 = as.numeric(c(rep(0,180),rep(1,57))))
table(noch4$Max_by_90_H2SPos_12)
str(noch4$Diarrhea)
str(noch4$Max_by_90_H2SPos_12)
t.test(`Acceleration (mg) - All days`~ sex, data = wei_sex)
wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
split(.$feature) %>%
map_dfr(~{
desc <- .x %>%
group_by(sex) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "sex", value = "lab") %>%
dplyr::rename("Men" = "1", "Women" = "2")
tab_men <- .x %>% filter(sex == 1)
tab_women <- .x %>% filter(sex == 2)
p.value <- data_frame(p.t.test = t.test(tab_men$value, tab_women$value)$p.value,
p.wilcoxon = wilcox.test(tab_men$value, tab_women$value)$p.value) %>%
mutate(p.t.test.round   = if_else(format(round(p.t.test, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.t.test, digits = 4), nsmall = 3))),
p.wilcoxon.round = if_else(is.na(p.wilcoxon) == T, "NA", if_else(format(round(p.wilcoxon, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.wilcoxon, digits = 4), nsmall = 3)))))
cbind(desc, p.value) %>% select(-p.t.test, -p.wilcoxon)
}, .id = "feature")
t.test(`Acceleration (mg) - All days`~ sex, data = wei_sex)
t <- t.test(`Acceleration (mg) - All days`~ sex, data = wei_sex)
t$statistic
t$data.name
str()
str(t)
t$estimate
# Skewed variables: does t test and Wilcoxon test provide different conclusion?
t.test.num <- tibble::tribble(
~feature,                                       ~p.t.test,                                                                                                                                                             ~p.wilcoxon,
"Acceleration (mg)",                            t.test(data_named$WD$`Acceleration (mg) - Week days`,                            data_named$WE$`Acceleration (mg) - Weekend days`)$p.value,                            wilcox.test(data_named$WD$`Acceleration (mg) - Week days`,                            data_named$WE$`Acceleration (mg) - Weekend days`)$p.value,
"Duration IN (min/day)",                        t.test(data_named$WD$`Duration IN (min/day) - Week days`,                        data_named$WE$`Duration IN (min/day) - Weekend days`)$p.value,                        wilcox.test(data_named$WD$`Duration IN (min/day) - Week days`,                        data_named$WE$`Duration IN (min/day) - Weekend days`)$p.value,
"Duration LIPA (min/day)",                      t.test(data_named$WD$`Duration LIPA (min/day) - Week days`,                      data_named$WE$`Duration LIPA (min/day) - Weekend days`)$p.value,                      NA,
"Duration MVPA (min/day)",                      t.test(data_named$WD$`Duration MVPA (min/day) - Week days`,                      data_named$WE$`Duration MVPA (min/day) - Weekend days`)$p.value,                      wilcox.test(data_named$WD$`Duration MVPA (min/day) - Week days`,                      data_named$WE$`Duration MVPA (min/day) - Weekend days`)$p.value,
"Intensity gradient intercept",                 t.test(data_named$WD$`Intensity gradient intercept - Week days`,                 data_named$WE$`Intensity gradient intercept - Weekend days`)$p.value,                 NA,
"Intensity gradient slope",                     t.test(data_named$WD$`Intensity gradient slope - Week days`,                     data_named$WE$`Intensity gradient slope - Weekend days`)$p.value,                     NA,
"Mean duration of IN bouts",                    t.test(data_named$WD$`Mean duration of IN bouts - Week days`,                    data_named$WE$`Mean duration of IN bouts - Weekend days`)$p.value,                    NA,
"Mean duration of LIPA bouts",                  t.test(data_named$WD$`Mean duration of LIPA bouts - Week days`,                  data_named$WE$`Mean duration of LIPA bouts - Weekend days`)$p.value,                  NA,
"Mean duration of MVPA bouts",                  t.test(data_named$WD$`Mean duration of MVPA bouts - Week days`,                  data_named$WE$`Mean duration of MVPA bouts - Weekend days`)$p.value,                  wilcox.test(data_named$WD$`Mean duration of MVPA bouts - Week days`,                  data_named$WE$`Mean duration of MVPA bouts - Weekend days`)$p.value,
"Most active 5hrs timing",                      t.test(data_named$WD$`Most active 5hrs timing - Week days`,                      data_named$WE$`Most active 5hrs timing - Weekend days`)$p.value,                      wilcox.test(data_named$WD$`Most active 5hrs timing - Week days`,                      data_named$WE$`Most active 5hrs timing - Weekend days`)$p.value,
"Number of IN bouts",                           t.test(data_named$WD$`Number of IN bouts - Week days`,                           data_named$WE$`Number of IN bouts - Weekend days`)$p.value,                           NA,
"Number of LIPA bouts",                         t.test(data_named$WD$`Number of LIPA bouts - Week days`,                         data_named$WE$`Number of LIPA bouts - Weekend days`)$p.value,                         NA,
"Number of MVPA bouts",                         t.test(data_named$WD$`Number of MVPA bouts - Week days`,                         data_named$WE$`Number of MVPA bouts - Weekend days`)$p.value,                         wilcox.test(data_named$WD$`Number of MVPA bouts - Week days`,                         data_named$WE$`Number of MVPA bouts - Weekend days`)$p.value,
"Number of < 10 min IN fragments (unbouted)",   t.test(data_named$WD$`Number of < 10 min IN fragments (unbouted) - Week days`,   data_named$WE$`Number of < 10 min IN fragments (unbouted) - Weekend days`)$p.value,   NA,
"Number of 10-30 min IN fragments",             t.test(data_named$WD$`Number of 10-30 min IN fragments - Week days`,             data_named$WE$`Number of 10-30 min IN fragments - Weekend days`)$p.value,             NA,
"Number of > 30 min IN fragments",              t.test(data_named$WD$`Number of > 30 min IN fragments - Week days`,              data_named$WE$`Number of > 30 min IN fragments - Weekend days`)$p.value,              NA,
"Number of < 10 min LIPA fragments (unbouted)", t.test(data_named$WD$`Number of < 10 min LIPA fragments (unbouted) - Week days`, data_named$WE$`Number of < 10 min LIPA fragments (unbouted) - Weekend days`)$p.value, NA,
"Number of > 10 min LIPA fragments",            t.test(data_named$WD$`Number of > 10 min LIPA fragments - Week days`,            data_named$WE$`Number of > 10 min LIPA fragments - Weekend days`)$p.value,            wilcox.test(data_named$WD$`Number of > 10 min LIPA fragments - Week days`,            data_named$WE$`Number of > 10 min LIPA fragments - Weekend days`)$p.value,
"Number of < 10 min MVPA fragments (unbouted)", t.test(data_named$WD$`Number of < 10 min MVPA fragments (unbouted) - Week days`, data_named$WE$`Number of < 10 min MVPA fragments (unbouted) - Weekend days`)$p.value, wilcox.test(data_named$WD$`Number of < 10 min MVPA fragments (unbouted) - Week days`, data_named$WE$`Number of < 10 min MVPA fragments (unbouted) - Weekend days`)$p.value,
"Number of > 10 min MVPA fragments",            t.test(data_named$WD$`Number of > 10 min MVPA fragments - Week days`,            data_named$WE$`Number of > 10 min MVPA fragments - Weekend days`)$p.value,            wilcox.test(data_named$WD$`Number of > 10 min MVPA fragments - Week days`,            data_named$WE$`Number of > 10 min MVPA fragments - Weekend days`)$p.value
) %>%
# Labels
mutate(p.t.test.round   = if_else(format(round(p.t.test, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.t.test, digits = 4), nsmall = 3))),
p.wilcoxon.round = if_else(is.na(p.wilcoxon) == T, "NA", if_else(format(round(p.wilcoxon, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.wilcoxon, digits = 4), nsmall = 3)))))
t.test.num
tibble::tribble(
~feature,                                       ~p.t.test,                                                                                        ~p.wilcoxon,
"Acceleration (mg)",                            t.test(`Acceleration (mg) - Week days` ~ sex, data = wei_sex)$p.value,                            wilcox.test(`Acceleration (mg) - Week days` ~ sex, data = wei_sex)$p.value,
"Duration IN (min/day)",                        t.test(`Duration IN (min/day) - Week days` ~ sex, data = wei_sex)$p.value,                        wilcox.test(`Duration IN (min/day) - Week days` ~ sex, data = wei_sex)$p.value,
"Duration LIPA (min/day)",                      t.test(`Duration LIPA (min/day) - Week days` ~ sex, data = wei_sex)$p.value,                      NA,
"Duration MVPA (min/day)",                      t.test(`Duration MVPA (min/day) - Week days` ~ sex, data = wei_sex)$p.value,                      wilcox.test(`Duration MVPA (min/day) - Week days` ~ sex, data = wei_sex)$p.value,
"Intensity gradient intercept",                 t.test(`Intensity gradient intercept - Week days` ~ sex, data = wei_sex)$p.value,                 NA,
"Intensity gradient slope",                     t.test(`Intensity gradient slope - Week days` ~ sex, data = wei_sex)$p.value,                     NA,
"Mean duration of IN bouts",                    t.test(`Mean duration of IN bouts - Week days` ~ sex, data = wei_sex)$p.value,                    NA,
"Mean duration of LIPA bouts",                  t.test(`Mean duration of LIPA bouts - Week days` ~ sex, data = wei_sex)$p.value,                  NA,
"Mean duration of MVPA bouts",                  t.test(`Mean duration of MVPA bouts - Week days` ~ sex, data = wei_sex)$p.value,                  wilcox.test(`Mean duration of MVPA bouts - Week days` ~ sex, data = wei_sex)$p.value,
"Most active 5hrs timing",                      t.test(`Most active 5hrs timing - Week days` ~ sex, data = wei_sex)$p.value,                      wilcox.test(`Most active 5hrs timing - Week days` ~ sex, data = wei_sex)$p.value,
"Number of IN bouts",                           t.test(`Number of IN bouts - Week days` ~ sex, data = wei_sex)$p.value,                           NA,
"Number of LIPA bouts",                         t.test(`Number of LIPA bouts - Week days` ~ sex, data = wei_sex)$p.value,                         NA,
"Number of MVPA bouts",                         t.test(`Number of MVPA bouts - Week days` ~ sex, data = wei_sex)$p.value,                         wilcox.test(`Number of MVPA bouts - Week days` ~ sex, data = wei_sex)$p.value,
"Number of < 10 min IN fragments (unbouted)",   t.test(`Number of < 10 min IN fragments (unbouted) - Week days` ~ sex, data = wei_sex)$p.value,   NA,
"Number of 10-30 min IN fragments",             t.test(`Number of 10-30 min IN fragments - Week days` ~ sex, data = wei_sex)$p.value,             NA,
"Number of > 30 min IN fragments",              t.test(`Number of > 30 min IN fragments - Week days` ~ sex, data = wei_sex)$p.value,              NA,
"Number of < 10 min LIPA fragments (unbouted)", t.test(`Number of < 10 min LIPA fragments (unbouted) - Week days` ~ sex, data = wei_sex)$p.value, NA,
"Number of > 10 min LIPA fragments",            t.test(`Number of > 10 min LIPA fragments - Week days` ~ sex, data = wei_sex)$p.value,            wilcox.test(`Number of > 10 min LIPA fragments - Week days` ~ sex, data = wei_sex)$p.value,
"Number of < 10 min MVPA fragments (unbouted)", t.test(`Number of < 10 min MVPA fragments (unbouted) - Week days` ~ sex, data = wei_sex)$p.value, wilcox.test(`Number of < 10 min MVPA fragments (unbouted) - Week days` ~ sex, data = wei_sex)$p.value,
"Number of > 10 min MVPA fragments",            t.test(`Number of > 10 min MVPA fragments - Week days` ~ sex, data = wei_sex)$p.value,            wilcox.test(`Number of > 10 min MVPA fragments - Week days` ~ sex, data = wei_sex)$p.value) %>%
# Labels
mutate(p.t.test.round   = if_else(format(round(p.t.test, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.t.test, digits = 4), nsmall = 3))),
p.wilcoxon.round = if_else(is.na(p.wilcoxon) == T, "NA", if_else(format(round(p.wilcoxon, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.wilcoxon, digits = 4), nsmall = 3)))))
tibble::tribble(
~feature,                                       ~p.t.test,                                                                                        ~p.wilcoxon,
"Acceleration (mg)",                            t.test(`Acceleration (mg) - All days` ~ sex, data = wei_sex)$p.value,                            wilcox.test(`Acceleration (mg) - All days` ~ sex, data = wei_sex)$p.value,
"Duration IN (min/day)",                        t.test(`Duration IN (min/day) - All days` ~ sex, data = wei_sex)$p.value,                        wilcox.test(`Duration IN (min/day) - All days` ~ sex, data = wei_sex)$p.value,
"Duration LIPA (min/day)",                      t.test(`Duration LIPA (min/day) - All days` ~ sex, data = wei_sex)$p.value,                      NA,
"Duration MVPA (min/day)",                      t.test(`Duration MVPA (min/day) - All days` ~ sex, data = wei_sex)$p.value,                      wilcox.test(`Duration MVPA (min/day) - All days` ~ sex, data = wei_sex)$p.value,
"Intensity gradient intercept",                 t.test(`Intensity gradient intercept - All days` ~ sex, data = wei_sex)$p.value,                 NA,
"Intensity gradient slope",                     t.test(`Intensity gradient slope - All days` ~ sex, data = wei_sex)$p.value,                     NA,
"Mean duration of IN bouts",                    t.test(`Mean duration of IN bouts - All days` ~ sex, data = wei_sex)$p.value,                    NA,
"Mean duration of LIPA bouts",                  t.test(`Mean duration of LIPA bouts - All days` ~ sex, data = wei_sex)$p.value,                  NA,
"Mean duration of MVPA bouts",                  t.test(`Mean duration of MVPA bouts - All days` ~ sex, data = wei_sex)$p.value,                  wilcox.test(`Mean duration of MVPA bouts - All days` ~ sex, data = wei_sex)$p.value,
"Most active 5hrs timing",                      t.test(`Most active 5hrs timing - All days` ~ sex, data = wei_sex)$p.value,                      wilcox.test(`Most active 5hrs timing - All days` ~ sex, data = wei_sex)$p.value,
"Number of IN bouts",                           t.test(`Number of IN bouts - All days` ~ sex, data = wei_sex)$p.value,                           NA,
"Number of LIPA bouts",                         t.test(`Number of LIPA bouts - All days` ~ sex, data = wei_sex)$p.value,                         NA,
"Number of MVPA bouts",                         t.test(`Number of MVPA bouts - All days` ~ sex, data = wei_sex)$p.value,                         wilcox.test(`Number of MVPA bouts - All days` ~ sex, data = wei_sex)$p.value,
"Number of < 10 min IN fragments (unbouted)",   t.test(`Number of < 10 min IN fragments (unbouted) - All days` ~ sex, data = wei_sex)$p.value,   NA,
"Number of 10-30 min IN fragments",             t.test(`Number of 10-30 min IN fragments - All days` ~ sex, data = wei_sex)$p.value,             NA,
"Number of > 30 min IN fragments",              t.test(`Number of > 30 min IN fragments - All days` ~ sex, data = wei_sex)$p.value,              NA,
"Number of < 10 min LIPA fragments (unbouted)", t.test(`Number of < 10 min LIPA fragments (unbouted) - All days` ~ sex, data = wei_sex)$p.value, NA,
"Number of > 10 min LIPA fragments",            t.test(`Number of > 10 min LIPA fragments - All days` ~ sex, data = wei_sex)$p.value,            wilcox.test(`Number of > 10 min LIPA fragments - All days` ~ sex, data = wei_sex)$p.value,
"Number of < 10 min MVPA fragments (unbouted)", t.test(`Number of < 10 min MVPA fragments (unbouted) - All days` ~ sex, data = wei_sex)$p.value, wilcox.test(`Number of < 10 min MVPA fragments (unbouted) - All days` ~ sex, data = wei_sex)$p.value,
"Number of > 10 min MVPA fragments",            t.test(`Number of > 10 min MVPA fragments - All days` ~ sex, data = wei_sex)$p.value,            wilcox.test(`Number of > 10 min MVPA fragments - All days` ~ sex, data = wei_sex)$p.value) %>%
# Labels
mutate(p.t.test.round   = if_else(format(round(p.t.test, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.t.test, digits = 4), nsmall = 3))),
p.wilcoxon.round = if_else(is.na(p.wilcoxon) == T, "NA", if_else(format(round(p.wilcoxon, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.wilcoxon, digits = 4), nsmall = 3)))))
wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
group_by(feature, sex) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "sex", value = "lab") %>%
dplyr::rename("Men" = "1", "Women" = "2")
# > Mean & sd for each feature, by sex
desc.tab.sex <- wei_sex %>%
gather(key = "feature", value = "value", -stno, -sex) %>%
group_by(feature, sex) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "sex", value = "lab") %>%
dplyr::rename("Men" = "1", "Women" = "2")
# > T-test or Wilcoxon test for skewed variables
t.test.num.sex <- tibble::tribble(
~feature,                                       ~p.t.test,                                                                                        ~p.wilcoxon,
"Acceleration (mg)",                            t.test(`Acceleration (mg) - All days` ~ sex, data = wei_sex)$p.value,                            wilcox.test(`Acceleration (mg) - All days` ~ sex, data = wei_sex)$p.value,
"Duration IN (min/day)",                        t.test(`Duration IN (min/day) - All days` ~ sex, data = wei_sex)$p.value,                        wilcox.test(`Duration IN (min/day) - All days` ~ sex, data = wei_sex)$p.value,
"Duration LIPA (min/day)",                      t.test(`Duration LIPA (min/day) - All days` ~ sex, data = wei_sex)$p.value,                      NA,
"Duration MVPA (min/day)",                      t.test(`Duration MVPA (min/day) - All days` ~ sex, data = wei_sex)$p.value,                      wilcox.test(`Duration MVPA (min/day) - All days` ~ sex, data = wei_sex)$p.value,
"Intensity gradient intercept",                 t.test(`Intensity gradient intercept - All days` ~ sex, data = wei_sex)$p.value,                 NA,
"Intensity gradient slope",                     t.test(`Intensity gradient slope - All days` ~ sex, data = wei_sex)$p.value,                     NA,
"Mean duration of IN bouts",                    t.test(`Mean duration of IN bouts - All days` ~ sex, data = wei_sex)$p.value,                    NA,
"Mean duration of LIPA bouts",                  t.test(`Mean duration of LIPA bouts - All days` ~ sex, data = wei_sex)$p.value,                  NA,
"Mean duration of MVPA bouts",                  t.test(`Mean duration of MVPA bouts - All days` ~ sex, data = wei_sex)$p.value,                  wilcox.test(`Mean duration of MVPA bouts - All days` ~ sex, data = wei_sex)$p.value,
"Most active 5hrs timing",                      t.test(`Most active 5hrs timing - All days` ~ sex, data = wei_sex)$p.value,                      wilcox.test(`Most active 5hrs timing - All days` ~ sex, data = wei_sex)$p.value,
"Number of IN bouts",                           t.test(`Number of IN bouts - All days` ~ sex, data = wei_sex)$p.value,                           NA,
"Number of LIPA bouts",                         t.test(`Number of LIPA bouts - All days` ~ sex, data = wei_sex)$p.value,                         NA,
"Number of MVPA bouts",                         t.test(`Number of MVPA bouts - All days` ~ sex, data = wei_sex)$p.value,                         wilcox.test(`Number of MVPA bouts - All days` ~ sex, data = wei_sex)$p.value,
"Number of < 10 min IN fragments (unbouted)",   t.test(`Number of < 10 min IN fragments (unbouted) - All days` ~ sex, data = wei_sex)$p.value,   NA,
"Number of 10-30 min IN fragments",             t.test(`Number of 10-30 min IN fragments - All days` ~ sex, data = wei_sex)$p.value,             NA,
"Number of > 30 min IN fragments",              t.test(`Number of > 30 min IN fragments - All days` ~ sex, data = wei_sex)$p.value,              NA,
"Number of < 10 min LIPA fragments (unbouted)", t.test(`Number of < 10 min LIPA fragments (unbouted) - All days` ~ sex, data = wei_sex)$p.value, NA,
"Number of > 10 min LIPA fragments",            t.test(`Number of > 10 min LIPA fragments - All days` ~ sex, data = wei_sex)$p.value,            wilcox.test(`Number of > 10 min LIPA fragments - All days` ~ sex, data = wei_sex)$p.value,
"Number of < 10 min MVPA fragments (unbouted)", t.test(`Number of < 10 min MVPA fragments (unbouted) - All days` ~ sex, data = wei_sex)$p.value, wilcox.test(`Number of < 10 min MVPA fragments (unbouted) - All days` ~ sex, data = wei_sex)$p.value,
"Number of > 10 min MVPA fragments",            t.test(`Number of > 10 min MVPA fragments - All days` ~ sex, data = wei_sex)$p.value,            wilcox.test(`Number of > 10 min MVPA fragments - All days` ~ sex, data = wei_sex)$p.value) %>%
# Labels
mutate(p.t.test.round   = if_else(format(round(p.t.test, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.t.test, digits = 4), nsmall = 3))),
p.wilcoxon.round = if_else(is.na(p.wilcoxon) == T, "NA", if_else(format(round(p.wilcoxon, digits = 4), nsmall = 3) < 0.001, "<0.001", as.character(format(round(p.wilcoxon, digits = 4), nsmall = 3)))))
desc.tab.sex
substring
?substring
# > Mean, sd of all PA metrics, p for difference between week days and weekend days (t-test; $: Wilcoxon test for skewed variables)
desc.tab.sex %>%
mutate(feature = substr(feature, 1, nchar(feature) - 11))
desc.tab.sex %>%
mutate(feature = substr(feature, 1, nchar(feature) - 11)) %>%
# Add p value
left_join(t.test.num.sex, by = "feature")
# > Mean, sd of all PA metrics, p for difference between week days and weekend days (t-test; $: Wilcoxon test for skewed variables)
desc.tab.sex %>%
mutate(feature = substr(feature, 1, nchar(feature) - 11)) %>%
# Add p value
left_join(t.test.num.sex, by = "feature") %>%
mutate(p = if_else(p.wilcoxon.round == "NA", p.t.test.round, paste0(p.wilcoxon.round, "$"))) %>%
select(-p.t.test, -p.t.test.round, -p.wilcoxon, -p.wilcoxon.round) %>%
# Add a column for distinguish variables for sensitivity analysis
mutate(analysis = if_else(feature %in% c("Number of < 10 min IN fragments (unbouted)", "Number of 10-30 min IN fragments", "Number of > 30 min IN fragments",
"Number of < 10 min LIPA fragments (unbouted)", "Number of > 10 min LIPA fragments",
"Number of < 10 min MVPA fragments (unbouted)","Number of > 10 min MVPA fragments"), "Sensitivity analysis", "Main analysis")) %>%
arrange(analysis, feature)
mort <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\updateddisease_2019\\mort0919")
mort <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\updateddisease_2019\\mort0919.dta")
particip <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\particip.dta")
head(mort)
names(mort)
table(mort$stat0919)
mort$stat0919
mort$e_19ac
table(mort$e_19ac)
mort <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\updateddisease_2019\\mort0919.dta") %>% select(stno, e_19ac)
# > Descriptive table of the (non-standardized) variables
wei_mort <- mort %>%
left_join(data_named$wei, by = "stno")
table(wei_mort$e_19ac)
# > Descriptive table of the (non-standardized) variables
wei_mort <- mort %>%
right_join(data_named$wei, by = "stno")
table(wei_mort$e_19ac)
# > Mean & sd for each feature, by mortality status
desc.tab.mort <- wei_mort %>%
gather(key = "feature", value = "value", -stno, -e_19ac) %>%
group_by(feature, e_19ac) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "e_19ac", value = "lab") %>%
dplyr::rename("Non-dead" = "0", "Dead" = "1")
desc.tab.mort
wei_mort %>%
gather(key = "feature", value = "value", -stno, -e_19ac) %>%
group_by(feature, e_19ac) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")"))
table(wei_mort$e_19ac, exclude = NULL)
# > Mean & sd for each feature, by mortality status
desc.tab.mort <- wei_mort %>%
gather(key = "feature", value = "value", -stno, -e_19ac) %>%
group_by(feature, e_19ac) %>%
summarise(mean = mean(value),
sd = sd(value)) %>%
mutate(lab = paste0(format(round(mean, 1), nsmall = 1), " (", format(round(sd, 2), nsmall = 2), ")")) %>%
select(-mean, -sd) %>%
spread(key = "e_19ac", value = "lab") %>%
dplyr::rename("Non-dead" = "0", "Dead" = "1")
desc.tab.mort
mort <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\updateddisease_2019\\mort0919.dta") %>% select(stno, e_19ac)
mort <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\05_WHITEHALL\\updateddisease_2019\\mort0919.dta")
mort %>% filter(is.na(e_19ac) ==T)
mort %>% filter(is.na(e_19ac) ==T) %>% View(.)
