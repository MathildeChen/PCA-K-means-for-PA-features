ggtheme = theme_minimal())
# Compare PA features among the different classifications
wei_log_comp      <- comp_PA_feat(data = data_wei %>% left_join(data_wei_log %>% dplyr::select(stno, km.5), by = "stno"))
wei_log_pca_comp  <- comp_PA_feat(data = data_wei %>% left_join(data_wei_log.pca %>% dplyr::select(stno, km.5), by = "stno"))
wei_log_pca4_comp <- comp_PA_feat(data = data_wei %>% left_join(data_wei_log.pca.4 %>% dplyr::select(stno, km.5), by = "stno"))
rbind(wei_log_comp[[2]] %>% mutate(type = "wei_log"),
wei_log_pca_comp[[2]] %>% mutate(type = "wei_log_pca"),
wei_log_pca4_comp[[2]] %>% mutate(type = "wei_log_pca4")) %>%
ggplot(., aes(x = type, y = x.mean, color = as.factor(Group.1)))+
geom_point() +
facet_wrap(~ Feature, scales = "free") +
coord_flip()
rbind(wei_log_comp[[2]] %>% mutate(type = "wei_log"),
wei_log_pca_comp[[2]] %>% mutate(type = "wei_log_pca"),
wei_log_pca4_comp[[2]] %>% mutate(type = "wei_log_pca4")) %>%
ggplot(., aes(x = type, y = x.mean, color = as.factor(Group.1)))+
geom_point() +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
theme_minimal() +
theme(legend.position = "bottom")
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, y = x.mean, color = as.factor(Group.1)))+
geom_point() +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
scale_color_viridis_c(name = "Cluster")
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, y = x.mean, color = as.factor(Group.1)))+
geom_point() +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
scale_color_viridis_d(name = "Cluster")
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, y = x.mean, color = as.factor(Group.1)))+
geom_point() +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
scale_color_viridis_d(name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, y = x.mean, color = as.factor(Group.1)))+
geom_point() +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
geom_linerange(aes(ymin = x.mean-x.sd, ymax = x.mean+x.sd)) +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean), position = position_dodge2()) +
geom_linerange(aes(ymin = x.mean-x.sd, ymax = x.mean+x.sd), position = position_dodge2()) +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean), position = position_dodge2(width = 0.2)) +
geom_linerange(aes(ymin = x.mean-x.sd, ymax = x.mean+x.sd), position = position_dodge2(width = 0.2)) +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean), position = position_dodge2(width = 0.75)) +
geom_linerange(aes(ymin = x.mean-x.sd, ymax = x.mean+x.sd), position = position_dodge2(width = 0.75)) +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free", ncol = 3) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
# Plot (mean + sd)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
geom_linerange(aes(ymin = x.mean-x.sd, ymax = x.mean+x.sd)) +
facet_wrap(~ Feature, scales = "free.x") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
# Plot (mean + sd)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
geom_linerange(aes(ymin = x.mean-x.sd, ymax = x.mean+x.sd)) +
facet_wrap(~ Feature, scales = "free_x") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_minimal() +
theme(legend.position = "bottom")
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_grey() +
theme(legend.position = "bottom")
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_classic() +
theme(legend.position = "bottom")
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom")
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free", ncol = 2, scale = "free_y") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom")
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free", ncol = 2, scale = "free_x") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom")
facet_wrap(~ Feature, scales = "free", ncol = 2, scales = "free_x") +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom")
facet_wrap(~ Feature, scales = "free_x", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom")
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free_x", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom")
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free_x", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom",
axis.title.y = element_blank())
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free_x", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom",
axis.title = element_blank())
# Plot (mean + sd)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
geom_linerange(aes(ymin = x.mean-x.sd, ymax = x.mean+x.sd)) +
facet_wrap(~ Feature, scales = "free_x", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom",
axis.title = element_blank())
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free_x", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom",
axis.title = element_blank())
# Plot clusters
fviz_cluster(object = KM.wei_log,
data = z_data_wei_log,
main = "Analysis without PCA",
geom = "point",
palette = "Set1",
ellipse = FALSE,
star.plot = FALSE,
ggtheme = theme_minimal())
fviz_cluster(object = KM.pca.wei_log,
data = z_data_wei_log,
main = "Analysis with PCA (all components)",
geom = "point",
palette = "Set1",
ellipse = FALSE,
star.plot = FALSE,
ggtheme = theme_minimal())
fviz_cluster(object = KM.pca.4.wei_log,
data = z_data_wei_log,
main = "Analysis with PCA (4 first components)",
geom = "point",
palette = "Set1",
ellipse = FALSE,
star.plot = FALSE,
ggtheme = theme_minimal())
# Kmeans indicators
map_dfr(list_for_comp, ~{
clusters_info <- data.frame(model = .x$title.save,
Cluster = c("Cluster1", "Cluster2", "Cluster3", "Cluster4", "Cluster5"),
# Within-cluster sum of square
withinss = .x$kmeans.obj$withinss,
# Cluster size
size = .x$kmeans.obj$size) %>%
gather(key = "Indicator", value = "Indicator_value", withinss, size) %>%
spread(key = "Cluster", value = "Indicator_value") %>%
group_by(model, Indicator) %>%
mutate(Total = Cluster1 + Cluster2 + Cluster3 + Cluster4 + Cluster5)
})
# Group kmeans objects and data in a list
list_for_comp <- list(
list(kmeans.obj = KM.wei_log,
raw.data = data_wei_log,
data.for.kmeans = z_data_wei_log,
title.plot = "Weighted daily average (skewed variables are log(x+1))",
title.save = "01_wei_log"),
list(kmeans.obj = KM.pca.wei_log,
raw.data = data_wei_log,
data.for.kmeans = z_data_wei_log,
title.plot = "all PC from weighted daily average (skewed variables are log(x+1))",
title.save = "01_wei_log_pca"),
list(kmeans.obj = KM.pca.4.wei_log,
raw.data = data_wei_log,
data.for.kmeans = z_data_wei_log,
title.plot = "First 4 PC from weighted daily average (skewed variables are log(x+1))",
title.save = "01_wei_log_pca_4")
)
# Kmeans indicators
map_dfr(list_for_comp, ~{
clusters_info <- data.frame(model = .x$title.save,
Cluster = c("Cluster1", "Cluster2", "Cluster3", "Cluster4", "Cluster5"),
# Within-cluster sum of square
withinss = .x$kmeans.obj$withinss,
# Cluster size
size = .x$kmeans.obj$size) %>%
gather(key = "Indicator", value = "Indicator_value", withinss, size) %>%
spread(key = "Cluster", value = "Indicator_value") %>%
group_by(model, Indicator) %>%
mutate(Total = Cluster1 + Cluster2 + Cluster3 + Cluster4 + Cluster5)
})
# Kmeans indicators
map_dfr(list_for_comp, ~{
clusters_info <- data.frame(model = .x$title.save,
Cluster = c("Cluster1", "Cluster2", "Cluster3", "Cluster4", "Cluster5"),
# Within-cluster sum of square
withinss = .x$kmeans.obj$withinss,
# Cluster size
size = .x$kmeans.obj$size) %>%
gather(key = "Indicator", value = "Indicator_value", withinss, size) %>%
spread(key = "Cluster", value = "Indicator_value") %>%
group_by(model, Indicator) %>%
mutate(Total = Cluster1 + Cluster2 + Cluster3 + Cluster4 + Cluster5)
}) %>% View(.)
# Plot clusters
fviz_cluster(object = KM.wei_log,
data = z_data_wei_log,
main = "Analysis without PCA",
geom = "point",
palette = "Set1",
ellipse = FALSE,
star.plot = FALSE,
ggtheme = theme_minimal(), alpha = 0.1)
fviz_cluster(object = KM.pca.wei_log,
data = z_data_wei_log,
main = "Analysis with PCA (all components)",
geom = "point",
palette = "Set1",
ellipse = FALSE,
star.plot = FALSE,
ggtheme = theme_minimal(), alpha = 0.1)
fviz_cluster(object = KM.pca.4.wei_log,
data = z_data_wei_log,
main = "Analysis with PCA (4 first components)",
geom = "point",
palette = "Set1",
ellipse = FALSE,
star.plot = FALSE,
ggtheme = theme_minimal(), alpha = 0.1)
map_dfr(list_for_comp, ~{
data.frame(model = .x$title.save,
# Total sum of square: measures the total variance in the data
totss = .x$kmeans.obj$totss,
# Total within-cluster sum of squares, i.e. sum(within-cluster sum of squares): measures the compactness of the clustering --> lower is better
tot.withinss = .x$kmeans.obj$tot.withinss,
# Between-cluster sum of squares, i.e. Total sum of square - Total within-cluster sum of squares: measures the difference between clusters --> higher is better
betweenss = .x$kmeans.obj$betweenss)
})
# Plot (mean only)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>% mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
ggplot(., aes(x = type, color = as.factor(Group.1)))+
geom_point(aes(y = x.mean)) +
facet_wrap(~ Feature, scales = "free_x", ncol = 2) +
coord_flip() +
scale_color_brewer(palette = "Set1", name = "Cluster") +
theme_light() +
theme(legend.position = "bottom",
axis.title = element_blank())
wei_log_pca_comp[[2]] %>%
mutate(Group.1 = recode("1" = "2", "2" = "3", "3" = "4", "4" = "1", "5" = "5"))
wei_log_pca_comp[[2]]
wei_log_pca_comp[[2]]
wei_log_pca_comp[[2]] %>% str(.)
wei_log_pca_comp[[2]] %>%
mutate(Group.1 = recode("1" = "2", "2" = "3", "3" = "4", "4" = "1", "5" = "5"))
wei_log_pca_comp[[2]] %>%
mutate(Group.1 = recode(Group.1, "1" = "2", "2" = "3", "3" = "4", "4" = "1", "5" = "5"))
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>%
mutate(Group.1 = recode(Group.1, "1" = "2", "2" = "3", "3" = "4", "4" = "1", "5" = "5")) %>%
mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
split(.$Group.1)
rbind(wei_log_comp[[2]] %>% mutate(type = "Without PCA"),
wei_log_pca_comp[[2]] %>%
mutate(Group.1 = recode(Group.1, "1" = "2", "2" = "3", "3" = "4", "4" = "1", "5" = "5")) %>%
mutate(type = "10 first PC"),
wei_log_pca4_comp[[2]] %>% mutate(type = "4 first PC")) %>%
split(.$Feature)
data_wei %>% left_join(data_wei_log %>% dplyr::select(stno, km.5)
)
data_wei %>% left_join(data_wei_log %>% dplyr::select(stno, km.5)) %>% mutate(type = "Without PCA")
rbind(data_wei %>% left_join(data_wei_log %>% dplyr::select(stno, km.5), by = "stno") %>% mutate(type = "Without PCA"),
data_wei %>% left_join(data_wei_log.pca %>% dplyr::select(stno, km.5), by = "stno") %>% mutate(type = "10 first PC") %>% mutate(km.5 = recode(km.5, "1" = "2", "2" = "3", "3" = "4", "4" = "1", "5" = "5")),
data_wei %>% left_join(data_wei_log.pca.4 %>% dplyr::select(stno, km.5), by = "stno") %>% mutate(type = "10 first PC"))
fulltab <- rbind(data_wei %>% left_join(data_wei_log %>% dplyr::select(stno, km.5), by = "stno") %>% mutate(type = "Without PCA"),
data_wei %>% left_join(data_wei_log.pca %>% dplyr::select(stno, km.5), by = "stno") %>% mutate(type = "10 first PC") %>% mutate(km.5 = recode(km.5, "1" = "2", "2" = "3", "3" = "4", "4" = "1", "5" = "5")),
data_wei %>% left_join(data_wei_log.pca.4 %>% dplyr::select(stno, km.5), by = "stno") %>% mutate(type = "10 first PC"))
names(fulltab[,!names(fulltab) %in% c("stno", "km.5")])
names(fulltab[,!names(fulltab) %in% c("stno", "km.5", "type")])
fulltab %>%
split(.$km.5)
fulltab %>%
split(.$km.5) %>%
map(., ~ {
dim(.x)
})
741+751+741
866+880+866
1024+1024+997
293+293+310
1084+1084+1070
fulltab %>%
split(.$km.5) %>%
map(., ~ {
dim(.x)
})
test <- fulltab %>% filter(km.5 == 1)
test
names(test[,!names(test) %in% c("stno", "km.5", "type")])
dim(test[,!names(test) %in% c("stno", "km.5", "type")])
for(v in names(test[,!names(test) %in% c("stno", "km.5", "type")]))
{
# > One-way ANOVA: compare the difference among clusters, depending on classification
anova.var <- aov(test[,colnames(test) == v] ~ type, data = test)
p.val.anova.var <- summary(anova.var)[[1]][[5]][1]
}
for(v in names(test[,!names(test) %in% c("stno", "km.5", "type")]))
{
# > One-way ANOVA: compare the difference among clusters, depending on classification
anova.var <- aov(test[,colnames(test) == v] ~ type, data = test)
cat(paste0("p for ", v, " = ", summary(anova.var)[[1]][[5]][1]))
}
cat(paste0("p for ", v, " = ", summary(anova.var)[[1]][[5]][1]), "\n")
for(v in names(test[,!names(test) %in% c("stno", "km.5", "type")]))
{
# > One-way ANOVA: compare the difference among clusters, depending on classification
anova.var <- aov(test[,colnames(test) == v] ~ type, data = test)
cat(paste0("p for ", v, " = ", summary(anova.var)[[1]][[5]][1]), "\n")
}
fulltab %>%
split(.$km.5) %>%
map(., ~ {
cat(paste0("\nResults for cluster ", unique(.x$km.5),"\n"))
for(v in names(.x[,!names(.x) %in% c("stno", "km.5", "type")]))
{
# > One-way ANOVA: compare the difference among clusters, depending on classification
anova.var <- aov(.x[,colnames(.x) == v] ~ type, data = .x)
cat(paste0("p for ", v, " = ", summary(anova.var)[[1]][[5]][1]), "\n")
}
})
fulltab %>%
split(.$km.5) %>%
map(., ~ {
cat(paste0("\nResults for cluster ", unique(.x$km.5),"\n"))
for(v in names(.x[,!names(.x) %in% c("stno", "km.5", "type")]))
{
# > One-way ANOVA: compare the difference among clusters, depending on classification
anova.var <- aov(.x[,colnames(.x) == v] ~ type, data = .x)
cat(paste0("p for ", v, " = ", round(summary(anova.var)[[1]][[5]][1])), 5), "\n")
}
})
fulltab %>%
split(.$km.5) %>%
map(., ~ {
cat(paste0("\nResults for cluster ", unique(.x$km.5),"\n"))
for(v in names(.x[,!names(.x) %in% c("stno", "km.5", "type")]))
{
# > One-way ANOVA: compare the difference among clusters, depending on classification
anova.var <- aov(.x[,colnames(.x) == v] ~ type, data = .x)
cat(paste0("p for ", v, " = ", round(summary(anova.var)[[1]][[5]][1], 5), "\n"))
}
})
unique(wei_log_comp[[2]])
unique(wei_log_comp[[2]]$Feature$)
unique(wei_log_comp[[2]]$Feature)
paste(unique(wei_log_comp[[2]]$Feature), collapse = ", "
)
z_data_wei_log
names(z_data_wei_log)
