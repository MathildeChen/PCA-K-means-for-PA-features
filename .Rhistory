WD         = z_data_WD_full    %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
WE         = z_data_WE_full    %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
WD_WE      = z_data_WD_WE_full %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
# Log-transformed data
wei_log    = z_data_wei_full   %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_wei, -z_dur_day_total_MVPA_min_wei, -z_FRAG_mean_dur_IN_day_wei, -z_FRAG_mean_dur_MVPA_day_wei, -z_M5TIME_num_wei, -starts_with("z_sqrt")),
WD_log     = z_data_WD_full    %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,  -z_M5TIME_num_WD,  -starts_with("z_sqrt")),
WE_log     = z_data_WE_full    %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -starts_with("z_sqrt")),
WD_WE_log  = z_data_WD_WE_full %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,  -z_M5TIME_num_WD,
-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -starts_with("z_sqrt")),
# Sqrt-transformed data
wei_sqrt   = z_data_wei_full   %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_wei, -z_dur_day_total_MVPA_min_wei, -z_FRAG_mean_dur_IN_day_wei, -z_FRAG_mean_dur_MVPA_day_wei, -z_M5TIME_num_wei, -starts_with("z_log")),
WD_sqrt    = z_data_WD_full    %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,   -z_M5TIME_num_WD,  -starts_with("z_log")),
WE_sqrt    = z_data_WE_full    %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -starts_with("z_log")),
WD_WE_sqrt = z_data_WD_WE_full %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,  -z_M5TIME_num_WD,
-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -starts_with("z_log"))
)
# > Check variables in datasets
lapply(data, names)        # --> OK
lapply(z_data, names)      # --> OK
lapply(data_full, names)   # --> OK
lapply(z_data_full, names) # --> OK
# -----------------------------
# Packages
#library(multcomp)
library(tidyverse)
library(haven)
library(testthat)
library(e1071)
# -----------------------------
# Data
# > Sample participants (n = 4008)
sample_stno <- read_dta("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\04_DAILY_ACT_SUM\\2021-05-03\\data_03052021.dta")
# > Person level summary
data0 <- read.csv("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Data\\04_DAILY_ACT_SUM\\2021-05-07\\part5_personsummary_WW_L40M100V400_T5A5.csv") %>%
rename("stno" = "ID") %>%
filter(stno %in% unique(sample_stno$stno))
# -----------------------------
# > Data check
# Number of blocks = total number of fragments
expect_equal(data0$FRAG_Nfrag_IN_day_wei, data0$Nblocks_day_total_IN_wei)
expect_equal(data0$FRAG_Nfrag_LIPA_day_wei, data0$Nblocks_day_total_LIG_wei)
expect_equal(data0$FRAG_Nfrag_MVPA_day_wei, data0$Nblocks_day_total_MOD_wei + data0$Nblocks_day_total_VIG_wei) # --> average diff: 1.46
expect_equal(data0$FRAG_Nfrag_MVPA_day_wei, data0$Nblocks_day_MOD_unbt_wei + data0$Nblocks_day_VIG_unbt_wei + data0$Nblocks_day_MVPA_bts_10_wei) # --> average diff: 0.594
# > All PA features
data <- data0 %>%
# Derive total duration in MVPA (total duration MOD + total duration VIG)
mutate(dur_day_total_MVPA_min_wei = dur_day_total_MOD_min_wei + dur_day_total_VIG_min_wei,
dur_day_total_MVPA_min_WD  = dur_day_total_MOD_min_WD  + dur_day_total_VIG_min_WD,
dur_day_total_MVPA_min_WE  = dur_day_total_MOD_min_WE  + dur_day_total_VIG_min_WE) %>%
# Derive number of unbouted fragments of MVPA (unbouted MOD + VIG)
mutate(Nblocks_day_MVPA_unbt_wei = Nblocks_day_total_MOD_wei + Nblocks_day_total_VIG_wei,
Nblocks_day_MVPA_unbt_WD  = Nblocks_day_MOD_unbt_WD   + Nblocks_day_VIG_unbt_WD,
Nblocks_day_MVPA_unbt_WE  = Nblocks_day_MOD_unbt_WE   + Nblocks_day_VIG_unbt_WE) %>%
# Correct m5 timing
mutate(M5TIME_num_wei = if_else(M5TIME_num_wei > 24, M5TIME_num_wei - 24, M5TIME_num_wei),
M5TIME_num_WD  = if_else(M5TIME_num_WD  > 24, M5TIME_num_WD  - 24, M5TIME_num_WD),
M5TIME_num_WE  = if_else(M5TIME_num_WE  > 24, M5TIME_num_WE  - 24, M5TIME_num_WE)) %>%
# Select appropiate variables for all days (_wei, weighted estimates), weekd days (_WD), weekend days (_WE)
select(stno,
# > Mean acceleration
ACC_day_mg_wei,               ACC_day_mg_WD,               ACC_day_mg_WE,
# > Time in SB, LIPA and MVPA
dur_day_total_IN_min_wei,     dur_day_total_IN_min_WD,     dur_day_total_IN_min_WE,
dur_day_total_LIG_min_wei,    dur_day_total_LIG_min_WD,    dur_day_total_LIG_min_WE,
dur_day_total_MVPA_min_wei,   dur_day_total_MVPA_min_WD,   dur_day_total_MVPA_min_WE,
# > Total number of bouts in SB, LIPA and MVPA
FRAG_Nfrag_IN_day_wei,        FRAG_Nfrag_IN_day_WD,        FRAG_Nfrag_IN_day_WE,
FRAG_Nfrag_LIPA_day_wei,      FRAG_Nfrag_LIPA_day_WD,      FRAG_Nfrag_LIPA_day_WE,
FRAG_Nfrag_MVPA_day_wei,      FRAG_Nfrag_MVPA_day_WD,      FRAG_Nfrag_MVPA_day_WE,
# > Number of fragments of different lengths in SB, LIPA and MVPA
Nblocks_day_IN_unbt_wei,      Nblocks_day_IN_unbt_WD,      Nblocks_day_IN_unbt_WE,
Nblocks_day_IN_bts_10_30_wei, Nblocks_day_IN_bts_10_30_WD, Nblocks_day_IN_bts_10_30_WE,
Nblocks_day_IN_bts_30_wei,    Nblocks_day_IN_bts_30_WD,    Nblocks_day_IN_bts_30_WE,
Nblocks_day_LIG_unbt_wei,     Nblocks_day_LIG_unbt_WD,     Nblocks_day_LIG_unbt_WE,
Nblocks_day_LIG_bts_10_wei,   Nblocks_day_LIG_bts_10_WD,   Nblocks_day_LIG_bts_10_WE,
Nblocks_day_MVPA_unbt_wei,    Nblocks_day_MVPA_unbt_WD,    Nblocks_day_MVPA_unbt_WE,
Nblocks_day_MVPA_bts_10_wei,  Nblocks_day_MVPA_bts_10_WD,  Nblocks_day_MVPA_bts_10_WE,
# > Mean duration of bouts in SB, LIPA and MVPA
FRAG_mean_dur_IN_day_wei,     FRAG_mean_dur_IN_day_WD,     FRAG_mean_dur_IN_day_WE,
FRAG_mean_dur_LIPA_day_wei,   FRAG_mean_dur_LIPA_day_WD,   FRAG_mean_dur_LIPA_day_WE,
FRAG_mean_dur_MVPA_day_wei,   FRAG_mean_dur_MVPA_day_WD,   FRAG_mean_dur_MVPA_day_WE,
# > Timing of the most 5 active hours
M5TIME_num_wei,               M5TIME_num_WD,               M5TIME_num_WE,
# > Activity gradient
ig_gradient_wei,              ig_gradient_WD,              ig_gradient_WE,
ig_intercept_wei,             ig_intercept_WD,             ig_intercept_WE)
# > Full set of PA features
# PA features (wei, WD and WE variables)
data_wei_full   <- data %>% select(stno, ends_with("_wei"))
data_WD_full    <- data %>% select(stno, ends_with("_WD"))
data_WE_full    <- data %>% select(stno, ends_with("_WE"))
data_WD_WE_full <- data %>% select(-ends_with("_wei"))
# -----------------------------
# > Check data skewness
# Spot skewed variables,
# i.e. skewness < 1 (Ana Gonzalez-Blanks, Jessie M. Bridgewater & Tuppett M. Yates (2020) Statistical Approaches for Highly Skewed Data: Evaluating Relations between Maltreatment and Young Adults' Non-Suicidal Self-injury, Journal of Clinical Child & Adolescent Psychology, 49:2, 147-161, DOI: 10.1080/15374416.2020.1724543)
skewed_wei  <- data.frame(skewness = apply(X = data_wei_full[,-1], MARGIN = 2, FUN = skewness)) %>% filter(abs(skewness) > 1)
skewed_WDWE <- data.frame(skewness = apply(X = data_WD_WE_full[,-1],  MARGIN = 2, FUN = skewness)) %>% filter(abs(skewness) > 1)
rbind(skewed_wei, skewed_WDWE) %>% arrange(desc(skewness))
# Skewed variables with 0
data_wei_full %>%
left_join(data_WD_WE_full, by = "stno") %>%
gather(key = "var", value = "value", -stno) %>%
filter(var %in% c(rownames(skewed_WDWE), rownames(skewed_wei)),
value == 0) %>%
group_by(var) %>%
summarise(n = n())
# -----------------------------
# Test different transformation
data_transform <- data_wei_full %>%
left_join(data_WD_WE_full, by = "stno") %>%
select(ACC_day_mg_wei , dur_day_total_MVPA_min_wei , Nblocks_day_LIG_bts_10_wei , Nblocks_day_MVPA_bts_10_wei , FRAG_mean_dur_IN_day_wei , FRAG_mean_dur_MVPA_day_wei , M5TIME_num_wei , ACC_day_mg_WD , ACC_day_mg_WE , dur_day_total_MVPA_min_WD , dur_day_total_MVPA_min_WE , FRAG_Nfrag_MVPA_day_WE , Nblocks_day_LIG_bts_10_WD , Nblocks_day_LIG_bts_10_WE , Nblocks_day_MVPA_unbt_WE , Nblocks_day_MVPA_bts_10_WD , Nblocks_day_MVPA_bts_10_WE , FRAG_mean_dur_IN_day_WD , FRAG_mean_dur_IN_day_WE , FRAG_mean_dur_MVPA_day_WD , FRAG_mean_dur_MVPA_day_WE , M5TIME_num_WD) %>%
gather(key = "var", value = "value") %>%
group_by(var) %>%
# Replace 0 by 0.001
mutate(value_no_0 = if_else(value == 0, 0.001, value)) %>%
# Compute different transformations
mutate(log0 = log(value_no_0),
log1 = log(value+1),
sqrt = sqrt(value))
# Compute variables skewness
data_transform %>%
group_by(var) %>%
summarise(s_0 = skewness(value),
#s_1 = skewness(value_no_0),
s_log0 = skewness(log0),
s_log1 = skewness(log1),
s_sqrt = skewness(sqrt)
) %>%
gather(key = "transformation", value = "skewness", -var) %>%
mutate(transformation = factor(transformation, levels = rev(c("s_0", "s_log0", "s_log1", "s_sqrt")))) %>%
ggplot(.) +
geom_col(aes(x = reorder(var, abs(skewness), max), y = abs(skewness), fill = transformation), position = position_dodge2()) +
geom_hline(yintercept = 1, lty = 2) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "", y = "Skewness (absolute)") +
scale_fill_manual(values = rev(c("darkred", "grey50", "grey75", "black")))
# -----------------------------
# > Transform the data
data_wei_full <- data_wei_full %>%
# Option 1: log(x+1)
mutate(log_ACC_day_mg_wei              = log(ACC_day_mg_wei+1),
log_dur_day_total_MVPA_min_wei  = log(dur_day_total_MVPA_min_wei+1),
log_Nblocks_day_LIG_bts_10_wei  = log(Nblocks_day_LIG_bts_10_wei+1),
log_Nblocks_day_MVPA_bts_10_wei = log(Nblocks_day_MVPA_bts_10_wei+1),
log_FRAG_mean_dur_IN_day_wei    = log(FRAG_mean_dur_IN_day_wei+1),
log_FRAG_mean_dur_MVPA_day_wei  = log(FRAG_mean_dur_MVPA_day_wei+1),
log_M5TIME_num_wei              = log(M5TIME_num_wei+1)) %>%
# Option 2: sqrt(x)
mutate(sqrt_ACC_day_mg_wei              = sqrt(ACC_day_mg_wei),
sqrt_dur_day_total_MVPA_min_wei  = sqrt(dur_day_total_MVPA_min_wei),
sqrt_Nblocks_day_LIG_bts_10_wei  = sqrt(Nblocks_day_LIG_bts_10_wei),
sqrt_Nblocks_day_MVPA_bts_10_wei = sqrt(Nblocks_day_MVPA_bts_10_wei),
sqrt_FRAG_mean_dur_IN_day_wei    = sqrt(FRAG_mean_dur_IN_day_wei),
sqrt_FRAG_mean_dur_MVPA_day_wei  = sqrt(FRAG_mean_dur_MVPA_day_wei),
sqrt_M5TIME_num_wei              = sqrt(M5TIME_num_wei))
data_WD_full <- data_WD_full %>%
# Option 1: log(x+1)
mutate(log_ACC_day_mg_WD              = log(ACC_day_mg_WD+1),
log_dur_day_total_MVPA_min_WD  = log(dur_day_total_MVPA_min_WD+1),
log_Nblocks_day_LIG_bts_10_WD  = log(Nblocks_day_LIG_bts_10_WD+1),
log_Nblocks_day_MVPA_bts_10_WD = log(Nblocks_day_MVPA_bts_10_WD+1),
log_FRAG_mean_dur_IN_day_WD    = log(FRAG_mean_dur_IN_day_WD+1),
log_FRAG_mean_dur_MVPA_day_WD  = log(FRAG_mean_dur_MVPA_day_WD+1),
log_M5TIME_num_WD              = log(M5TIME_num_WD+1)) %>%
# Option 2: sqrt(x)
mutate(sqrt_ACC_day_mg_WD              = sqrt(ACC_day_mg_WD),
sqrt_dur_day_total_MVPA_min_WD  = sqrt(dur_day_total_MVPA_min_WD),
sqrt_Nblocks_day_LIG_bts_10_WD  = sqrt(Nblocks_day_LIG_bts_10_WD),
sqrt_Nblocks_day_MVPA_bts_10_WD = sqrt(Nblocks_day_MVPA_bts_10_WD),
sqrt_FRAG_mean_dur_IN_day_WD    = sqrt(FRAG_mean_dur_IN_day_WD),
sqrt_FRAG_mean_dur_MVPA_day_WD  = sqrt(FRAG_mean_dur_MVPA_day_WD),
sqrt_M5TIME_num_WD              = sqrt(M5TIME_num_WD))
data_WE_full <- data_WE_full %>%
# Option 1: log(x+1)
mutate(log_ACC_day_mg_WE              = log(ACC_day_mg_WE+1),
log_dur_day_total_MVPA_min_WE  = log(dur_day_total_MVPA_min_WE+1),
log_Nblocks_day_LIG_bts_10_WE  = log(Nblocks_day_LIG_bts_10_WE+1),
log_Nblocks_day_MVPA_bts_10_WE = log(Nblocks_day_MVPA_bts_10_WE+1),
log_FRAG_mean_dur_IN_day_WE    = log(FRAG_mean_dur_IN_day_WE+1),
log_FRAG_mean_dur_MVPA_day_WE  = log(FRAG_mean_dur_MVPA_day_WE+1),
log_M5TIME_num_WE              = log(M5TIME_num_WE+1)) %>%
# Option 2: sqrt(x)
mutate(sqrt_ACC_day_mg_WE              = sqrt(ACC_day_mg_WE),
sqrt_dur_day_total_MVPA_min_WE  = sqrt(dur_day_total_MVPA_min_WE),
sqrt_Nblocks_day_LIG_bts_10_WE  = sqrt(Nblocks_day_LIG_bts_10_WE),
sqrt_Nblocks_day_MVPA_bts_10_WE = sqrt(Nblocks_day_MVPA_bts_10_WE),
sqrt_FRAG_mean_dur_IN_day_WE    = sqrt(FRAG_mean_dur_IN_day_WE),
sqrt_FRAG_mean_dur_MVPA_day_WE  = sqrt(FRAG_mean_dur_MVPA_day_WE),
sqrt_M5TIME_num_WE              = sqrt(M5TIME_num_WE))
data_WD_WE_full <- data_WD_WE_full %>%
# Option 1: log(x+1)
mutate(log_ACC_day_mg_WD              = log(ACC_day_mg_WD+1),
log_dur_day_total_MVPA_min_WD  = log(dur_day_total_MVPA_min_WD+1),
log_Nblocks_day_LIG_bts_10_WD  = log(Nblocks_day_LIG_bts_10_WD+1),
log_Nblocks_day_MVPA_bts_10_WD = log(Nblocks_day_MVPA_bts_10_WD+1),
log_FRAG_mean_dur_IN_day_WD    = log(FRAG_mean_dur_IN_day_WD+1),
log_FRAG_mean_dur_MVPA_day_WD  = log(FRAG_mean_dur_MVPA_day_WD+1),
log_M5TIME_num_WD              = log(M5TIME_num_WD+1),
log_ACC_day_mg_WE              = log(ACC_day_mg_WE+1),
log_dur_day_total_MVPA_min_WE  = log(dur_day_total_MVPA_min_WE+1),
log_Nblocks_day_LIG_bts_10_WE  = log(Nblocks_day_LIG_bts_10_WE+1),
log_Nblocks_day_MVPA_bts_10_WE = log(Nblocks_day_MVPA_bts_10_WE+1),
log_FRAG_mean_dur_IN_day_WE    = log(FRAG_mean_dur_IN_day_WE+1),
log_FRAG_mean_dur_MVPA_day_WE  = log(FRAG_mean_dur_MVPA_day_WE+1),
log_M5TIME_num_WE              = log(M5TIME_num_WE+1)) %>%
# Option 2: sqrt(x)
mutate(sqrt_ACC_day_mg_WE              = sqrt(ACC_day_mg_WE),
sqrt_dur_day_total_MVPA_min_WE  = sqrt(dur_day_total_MVPA_min_WE),
sqrt_Nblocks_day_LIG_bts_10_WE  = sqrt(Nblocks_day_LIG_bts_10_WE),
sqrt_Nblocks_day_MVPA_bts_10_WE = sqrt(Nblocks_day_MVPA_bts_10_WE),
sqrt_FRAG_mean_dur_IN_day_WE    = sqrt(FRAG_mean_dur_IN_day_WE),
sqrt_FRAG_mean_dur_MVPA_day_WE  = sqrt(FRAG_mean_dur_MVPA_day_WE),
sqrt_M5TIME_num_WE              = sqrt(M5TIME_num_WE),
sqrt_ACC_day_mg_WD              = sqrt(ACC_day_mg_WD),
sqrt_dur_day_total_MVPA_min_WD  = sqrt(dur_day_total_MVPA_min_WD),
sqrt_Nblocks_day_LIG_bts_10_WD  = sqrt(Nblocks_day_LIG_bts_10_WD),
sqrt_Nblocks_day_MVPA_bts_10_WD = sqrt(Nblocks_day_MVPA_bts_10_WD),
sqrt_FRAG_mean_dur_IN_day_WD    = sqrt(FRAG_mean_dur_IN_day_WD),
sqrt_FRAG_mean_dur_MVPA_day_WD  = sqrt(FRAG_mean_dur_MVPA_day_WD),
sqrt_M5TIME_num_WD              = sqrt(M5TIME_num_WD))
# > Check whether skewness in the transformed variables
data.frame(skewness = apply(X = data_wei_full %>% select(starts_with("log"), starts_with("sqrt")), MARGIN = 2, FUN = skewness)) %>% filter(abs(skewness) > 1)
# log(x+1): does not improve for FRAG_mean_dur_IN_day_wei and dur_day_total_MVPA_min_wei (abs(skewness) > 1)
# sqrt(x):  does not improve for FRAG_mean_dur_IN_day_wei (abs(skewness) > 1)
data.frame(skewness = apply(X = data_WD_full %>% select(starts_with("log"), starts_with("sqrt")), MARGIN = 2, FUN = skewness)) %>% filter(abs(skewness) > 1)
# log(x+1): does not improve for FRAG_mean_dur_IN_day_WD and dur_day_total_MVPA_min_WD (abs(skewness) > 1)
# sqrt(x):  does not improve for FRAG_mean_dur_IN_day_WD (abs(skewness) > 1)
data.frame(skewness = apply(X = data_WE_full %>% select(starts_with("log"), starts_with("sqrt")), MARGIN = 2, FUN = skewness)) %>% filter(abs(skewness) > 1)
# Histograms of both data and log transformed data
data_wei_full %>%
select(ACC_day_mg_wei, dur_day_total_MVPA_min_wei, Nblocks_day_LIG_bts_10_wei, Nblocks_day_MVPA_bts_10_wei, FRAG_mean_dur_IN_day_wei, FRAG_mean_dur_MVPA_day_wei, M5TIME_num_wei, starts_with("log_"), starts_with("sqrt_")) %>%
gather(key = "var", value = "value") %>%
mutate(vartype = if_else(substr(var, 1, 3) == "log", "log (data + 1)", "data"),
vartype = if_else(substr(var, 1, 4) == "sqrt", "sqrt (data)", vartype)) %>%
mutate(var = if_else(vartype == "log (data + 1)", substr(var, 5, nchar(var)), var),
var = if_else(vartype == "sqrt (data)", substr(var, 6, nchar(var)), var)) %>%
ggplot(., aes(x = value)) +
geom_histogram() +
facet_wrap(vartype ~ var, scale = "free", nrow = 3) +
theme(strip.text = element_text(size = 6),
axis.title = element_text(size = 6),
axis.text = element_text(size = 6))
# -----------------------------
# > Standardized PA features (and rename columns with "z_" to know that they are scaled
z_data_wei_full <- rename_with(data_wei_full[,-1],
.fn = ~paste0("z_", .),
.cols = names(data_wei_full[,-1])) %>% scale(.) %>% as.data.frame(.)
z_data_WD_full <- rename_with(data_WD_full[,-1],
.fn = ~paste0("z_", .),
.cols = names(data_WD_full[,-1])) %>% scale(.) %>% as.data.frame(.)
z_data_WE_full <- rename_with(data_WE_full[,-1],
.fn = ~paste0("z_", .),
.cols = names(data_WE_full[,-1])) %>% scale(.) %>% as.data.frame(.)
z_data_WD_WE_full <- rename_with(data_WD_WE_full[,-1],
.fn = ~paste0("z_", .),
.cols = names(data_WD_WE_full[,-1])) %>% scale(.) %>% as.data.frame(.)
# > Check standardization (mean = 0, sd = 1)
z_data_wei_full %>%
gather(key = "variable", value = "value") %>%
group_by(variable) %>%
summarise(mean = mean(value),
sd = sd(value))
z_data_WD_WE_full %>%
as.data.frame(.) %>%
gather(key = "variable", value = "value") %>%
group_by(variable) %>%
summarise(mean = mean(value),
sd = sd(value))
# A. Full set of features (non-standardized)
data_full <- list(
# Non-transformed data
wei        = data_wei_full   %>% select(-starts_with("log_"), -starts_with("sqrt")),
WD         = data_WD_full    %>% select(-starts_with("log_"), -starts_with("sqrt")),
WE         = data_WE_full    %>% select(-starts_with("log_"), -starts_with("sqrt")),
WD_WE      = data_WD_WE_full %>% select(-starts_with("log_"), -starts_with("sqrt")),
# Log-transformed data
wei_log    = data_wei_full   %>% select(-ACC_day_mg_wei, -dur_day_total_MVPA_min_wei, -FRAG_mean_dur_IN_day_wei, -FRAG_mean_dur_MVPA_day_wei, -M5TIME_num_wei, -Nblocks_day_LIG_bts_10_wei, -Nblocks_day_MVPA_bts_10_wei, -starts_with("sqrt")),
WD_log     = data_WD_full    %>% select(-ACC_day_mg_WD,  -dur_day_total_MVPA_min_WD,  -FRAG_mean_dur_IN_day_WD,  -FRAG_mean_dur_MVPA_day_WD,  -M5TIME_num_WD,  -Nblocks_day_LIG_bts_10_WD,  -Nblocks_day_MVPA_bts_10_WD,  -starts_with("sqrt")),
WE_log     = data_WE_full    %>% select(-ACC_day_mg_WE,  -dur_day_total_MVPA_min_WE,  -FRAG_mean_dur_IN_day_WE,  -FRAG_mean_dur_MVPA_day_WE,  -M5TIME_num_WE,  -Nblocks_day_LIG_bts_10_WE,  -Nblocks_day_MVPA_bts_10_WE,  -starts_with("sqrt")),
WD_WE_log  = data_WD_WE_full %>% select(-ACC_day_mg_WD,  -dur_day_total_MVPA_min_WD,  -FRAG_mean_dur_IN_day_WD,  -FRAG_mean_dur_MVPA_day_WD,  -M5TIME_num_WD,  -Nblocks_day_LIG_bts_10_WD,  -Nblocks_day_MVPA_bts_10_WD,
-ACC_day_mg_WE,  -dur_day_total_MVPA_min_WE,  -FRAG_mean_dur_IN_day_WE,  -FRAG_mean_dur_MVPA_day_WE,  -M5TIME_num_WE,  -Nblocks_day_LIG_bts_10_WE,  -Nblocks_day_MVPA_bts_10_WE,  -starts_with("sqrt")),
# Sqrt-transformed data
wei_sqrt   = data_wei_full   %>% select(-ACC_day_mg_wei, -dur_day_total_MVPA_min_wei, -FRAG_mean_dur_IN_day_wei, -FRAG_mean_dur_MVPA_day_wei, -M5TIME_num_wei, -Nblocks_day_LIG_bts_10_wei, -Nblocks_day_MVPA_bts_10_wei, -starts_with("log")),
WD_sqrt    = data_WD_full    %>% select(-ACC_day_mg_WD,  -dur_day_total_MVPA_min_WD,  -FRAG_mean_dur_IN_day_WD,  -FRAG_mean_dur_MVPA_day_WD,  -M5TIME_num_WD,  -Nblocks_day_LIG_bts_10_WD,  -Nblocks_day_MVPA_bts_10_WD,  -starts_with("log")),
WE_sqrt    = data_WE_full    %>% select(-ACC_day_mg_WE,  -dur_day_total_MVPA_min_WE,  -FRAG_mean_dur_IN_day_WE,  -FRAG_mean_dur_MVPA_day_WE,  -M5TIME_num_WE,  -Nblocks_day_LIG_bts_10_WE,  -Nblocks_day_MVPA_bts_10_WE,  -starts_with("log")),
WD_WE_sqrt = data_WD_WE_full %>% select(-ACC_day_mg_WD,  -dur_day_total_MVPA_min_WD,  -FRAG_mean_dur_IN_day_WD,  -FRAG_mean_dur_MVPA_day_WD,  -M5TIME_num_WD,  -Nblocks_day_LIG_bts_10_WD,  -Nblocks_day_MVPA_bts_10_WD,
-ACC_day_mg_WE,  -dur_day_total_MVPA_min_WE,  -FRAG_mean_dur_IN_day_WE,  -FRAG_mean_dur_MVPA_day_WE,  -M5TIME_num_WE,  -Nblocks_day_LIG_bts_10_WE,  -Nblocks_day_MVPA_bts_10_WE,  -starts_with("log"))
)
# B. Full set of features (standardized)
z_data_full <- list(
# Non-transformed data
wei        = z_data_wei_full   %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
WD         = z_data_WD_full    %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
WE         = z_data_WE_full    %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
WD_WE      = z_data_WD_WE_full %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
# Log-transformed data
wei_log    = z_data_wei_full   %>% select(-z_ACC_day_mg_wei, -z_dur_day_total_MVPA_min_wei, -z_FRAG_mean_dur_IN_day_wei, -z_FRAG_mean_dur_MVPA_day_wei, -z_M5TIME_num_wei, -z_Nblocks_day_LIG_bts_10_wei, -z_Nblocks_day_MVPA_bts_10_wei, -starts_with("z_sqrt")),
WD_log     = z_data_WD_full    %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,  -z_M5TIME_num_WD,  -z_Nblocks_day_LIG_bts_10_WD,  -z_Nblocks_day_MVPA_bts_10_WD,  -starts_with("z_sqrt")),
WE_log     = z_data_WE_full    %>% select(-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -z_Nblocks_day_LIG_bts_10_WE,  -z_Nblocks_day_MVPA_bts_10_WE,  -starts_with("z_sqrt")),
WD_WE_log  = z_data_WD_WE_full %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,  -z_M5TIME_num_WD,  -z_Nblocks_day_LIG_bts_10_WD,  -z_Nblocks_day_MVPA_bts_10_WD,
-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -z_Nblocks_day_LIG_bts_10_WE,  -z_Nblocks_day_MVPA_bts_10_WE,  -starts_with("z_sqrt")),
# Sqrt-transformed data
wei_sqrt   = z_data_wei_full   %>% select(-z_ACC_day_mg_wei, -z_dur_day_total_MVPA_min_wei, -z_FRAG_mean_dur_IN_day_wei, -z_FRAG_mean_dur_MVPA_day_wei, -z_M5TIME_num_wei, -z_Nblocks_day_LIG_bts_10_wei, -z_Nblocks_day_MVPA_bts_10_wei, -starts_with("z_log")),
WD_sqrt    = z_data_WD_full    %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,   -z_M5TIME_num_WD,  -z_Nblocks_day_LIG_bts_10_WD,  -z_Nblocks_day_MVPA_bts_10_WD,  -starts_with("z_log")),
WE_sqrt    = z_data_WE_full    %>% select(-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -z_Nblocks_day_LIG_bts_10_WE,  -z_Nblocks_day_MVPA_bts_10_WE,  -starts_with("z_log")),
WD_WE_sqrt = z_data_WD_WE_full %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,  -z_M5TIME_num_WD,  -z_Nblocks_day_LIG_bts_10_WD,  -z_Nblocks_day_MVPA_bts_10_WD,
-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -z_Nblocks_day_LIG_bts_10_WE,  -z_Nblocks_day_MVPA_bts_10_WE,  -starts_with("z_log"))
)
# C. Selected set of features (non-standardized)
#    PA features without number of bouts of different lengths
data <- list(
# Non-transformed data
wei        = data_wei_full   %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("log_"), -starts_with("sqrt")),
WD         = data_WD_full    %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("log_"), -starts_with("sqrt")),
WE         = data_WE_full    %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("log_"), -starts_with("sqrt")),
WD_WE      = data_WD_WE_full %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("log_"), -starts_with("sqrt")),
# Log-transformed data
wei_log    = data_wei_full   %>% select(-contains("Nblocks_day_")) %>% select(-ACC_day_mg_wei, -dur_day_total_MVPA_min_wei, -FRAG_mean_dur_IN_day_wei, -FRAG_mean_dur_MVPA_day_wei, -M5TIME_num_wei, -starts_with("sqrt")),
WD_log     = data_WD_full    %>% select(-contains("Nblocks_day_")) %>% select(-ACC_day_mg_WD,  -dur_day_total_MVPA_min_WD,  -FRAG_mean_dur_IN_day_WD,  -FRAG_mean_dur_MVPA_day_WD,  -M5TIME_num_WD,  -starts_with("sqrt")),
WE_log     = data_WE_full    %>% select(-contains("Nblocks_day_")) %>% select(-ACC_day_mg_WE,  -dur_day_total_MVPA_min_WE,  -FRAG_mean_dur_IN_day_WE,  -FRAG_mean_dur_MVPA_day_WE,  -M5TIME_num_WE,  -starts_with("sqrt")),
WD_WE_log  = data_WD_WE_full %>% select(-contains("Nblocks_day_")) %>% select(-ACC_day_mg_WD,  -dur_day_total_MVPA_min_WD,  -FRAG_mean_dur_IN_day_WD,  -FRAG_mean_dur_MVPA_day_WD,  -M5TIME_num_WD,
-ACC_day_mg_WE,  -dur_day_total_MVPA_min_WE,  -FRAG_mean_dur_IN_day_WE,  -FRAG_mean_dur_MVPA_day_WE,  -M5TIME_num_WE,  -starts_with("sqrt")),
# Sqrt-transformed data
wei_sqrt   = data_wei_full   %>% select(-contains("Nblocks_day_")) %>% select(-ACC_day_mg_wei, -dur_day_total_MVPA_min_wei, -FRAG_mean_dur_IN_day_wei, -FRAG_mean_dur_MVPA_day_wei, -M5TIME_num_wei, -starts_with("log")),
WD_sqrt    = data_WD_full    %>% select(-contains("Nblocks_day_")) %>% select(-ACC_day_mg_WD,  -dur_day_total_MVPA_min_WD,  -FRAG_mean_dur_IN_day_WD,  -FRAG_mean_dur_MVPA_day_WD,  -M5TIME_num_WD,  -starts_with("log")),
WE_sqrt    = data_WE_full    %>% select(-contains("Nblocks_day_")) %>% select(-ACC_day_mg_WE,  -dur_day_total_MVPA_min_WE,  -FRAG_mean_dur_IN_day_WE,  -FRAG_mean_dur_MVPA_day_WE,  -M5TIME_num_WE,  -starts_with("log")),
WD_WE_sqrt = data_WD_WE_full %>% select(-contains("Nblocks_day_")) %>% select(-ACC_day_mg_WD,  -dur_day_total_MVPA_min_WD,  -FRAG_mean_dur_IN_day_WD,  -FRAG_mean_dur_MVPA_day_WD,  -M5TIME_num_WD,
-ACC_day_mg_WE,  -dur_day_total_MVPA_min_WE,  -FRAG_mean_dur_IN_day_WE,  -FRAG_mean_dur_MVPA_day_WE,  -M5TIME_num_WE,  -starts_with("log"))
)
# D. Selected set of features (standardized)
#    PA features without number of bouts of different lengths
z_data <- list(
# Non-transformed data
wei        = z_data_wei_full   %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
WD         = z_data_WD_full    %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
WE         = z_data_WE_full    %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
WD_WE      = z_data_WD_WE_full %>% select(-contains("Nblocks_day_")) %>% select(-starts_with("z_log_"), -starts_with("z_sqrt")),
# Log-transformed data
wei_log    = z_data_wei_full   %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_wei, -z_dur_day_total_MVPA_min_wei, -z_FRAG_mean_dur_IN_day_wei, -z_FRAG_mean_dur_MVPA_day_wei, -z_M5TIME_num_wei, -starts_with("z_sqrt")),
WD_log     = z_data_WD_full    %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,  -z_M5TIME_num_WD,  -starts_with("z_sqrt")),
WE_log     = z_data_WE_full    %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -starts_with("z_sqrt")),
WD_WE_log  = z_data_WD_WE_full %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,  -z_M5TIME_num_WD,
-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -starts_with("z_sqrt")),
# Sqrt-transformed data
wei_sqrt   = z_data_wei_full   %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_wei, -z_dur_day_total_MVPA_min_wei, -z_FRAG_mean_dur_IN_day_wei, -z_FRAG_mean_dur_MVPA_day_wei, -z_M5TIME_num_wei, -starts_with("z_log")),
WD_sqrt    = z_data_WD_full    %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,   -z_M5TIME_num_WD,  -starts_with("z_log")),
WE_sqrt    = z_data_WE_full    %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -starts_with("z_log")),
WD_WE_sqrt = z_data_WD_WE_full %>% select(-contains("Nblocks_day_")) %>% select(-z_ACC_day_mg_WD,  -z_dur_day_total_MVPA_min_WD,  -z_FRAG_mean_dur_IN_day_WD,  -z_FRAG_mean_dur_MVPA_day_WD,  -z_M5TIME_num_WD,
-z_ACC_day_mg_WE,  -z_dur_day_total_MVPA_min_WE,  -z_FRAG_mean_dur_IN_day_WE,  -z_FRAG_mean_dur_MVPA_day_WE,  -z_M5TIME_num_WE,  -starts_with("z_log"))
)
# > Check variables in datasets
lapply(data, names)        # --> OK
# -----------------------------
# > Save
save(data, file = "\\172.27.137.244\vieillissement$\Post doc & PhD\Mathilde\Analysis\02_ARTICLE_2\PCA-K-means-for-PA-features\00_DATA\00_data_PCA_k_means.rda")
# -----------------------------
# > Save
save(data, file = "////172.27.137.244//vieillissement$//Post doc & PhD//Mathilde//Analysis//02_ARTICLE_2//PCA-K-means-for-PA-features//00_DATA//00_data_PCA_k_means.rda")
# -----------------------------
# > Save
save(data, file = "\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\PCA-K-means-for-PA-features\\00_DATA\\00_data_PCA_k_means.rda")
save(z_data, file = "\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\PCA-K-means-for-PA-features\\00_DATA\\00_z_data_PCA_k_means.rda")
save(data_full, file = "\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\PCA-K-means-for-PA-features\\00_DATA\\00_data_full_PCA_k_means.rda")
save(z_data_full, file = "\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\PCA-K-means-for-PA-features\\00_DATA\\00_z_data_full_PCA_k_means.rda")
# > Selected set of metrics (without number of bouts of different lengths)
#   Non-standardized metrics
load("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\PCA-K-means-for-PA-features\\00_DATA\\00_data_PCA_k_means.rda")
# > Selected set of metrics (without number of bouts of different lengths)
#   Non-standardized metrics
load("\\\\172.27.137.244\\vieillissement$\\Post doc & PhD\\Mathilde\\Analysis\\02_ARTICLE_2\\PCA-K-means-for-PA-features\\00_DATA\\00_data_PCA_k_means.rda")
tab.name <- tibble::tribble(
~var,                              ~varname,
# Average acceleration
"ACC_day_mg_wei",                  "Acceleration (mg) - All days",
"ACC_day_mg_WD",                   "Acceleration (mg) - Week days",
"ACC_day_mg_WE",                   "Acceleration (mg) - Weekend days",
# Time in SB, LIPA and MVPA
"dur_day_total_IN_min_wei",        "Duration IN (min/day) - All days",
"dur_day_total_LIG_min_wei",       "Duration LIPA (min/day) - All days",
"dur_day_total_MVPA_min_wei",      "Duration MVPA (min/day) - All days",
"dur_day_total_IN_min_WD",         "Duration IN (min/day) - Week days",
"dur_day_total_LIG_min_WD",        "Duration LIPA (min/day) - Week days",
"dur_day_total_MVPA_min_WD",       "Duration MVPA (min/day) - Week days",
"dur_day_total_IN_min_WE",         "Duration IN (min/day) - Weekend days",
"dur_day_total_LIG_min_WE",        "Duration LIPA (min/day) - Weekend days",
"dur_day_total_MVPA_min_WE",       "Duration MVPA (min/day) - Weekend days",
# Mean duration of fragments of SB, LIPA and MVPA
"FRAG_mean_dur_IN_day_wei",         "Mean duration of IN bouts - All days",
"FRAG_mean_dur_LIPA_day_wei",       "Mean duration of LIPA bouts - All days",
"FRAG_mean_dur_MVPA_day_wei",       "Mean duration of MVPA bouts - All days",
"FRAG_mean_dur_IN_day_WD",          "Mean duration of IN bouts - Week days",
"FRAG_mean_dur_LIPA_day_WD",        "Mean duration of LIPA bouts - Week days",
"FRAG_mean_dur_MVPA_day_WD",        "Mean duration of MVPA bouts - Week days",
"FRAG_mean_dur_IN_day_WE",          "Mean duration of IN bouts - Weekend days",
"FRAG_mean_dur_LIPA_day_WE",        "Mean duration of LIPA bouts - Weekend days",
"FRAG_mean_dur_MVPA_day_WE",        "Mean duration of MVPA bouts - Weekend days",
# Number of fragents of SB, LIPA and MVPA
"FRAG_Nfrag_IN_day_wei",            "Number of IN bouts - All days",
"FRAG_Nfrag_LIPA_day_wei",          "Number of LIPA bouts - All days",
"FRAG_Nfrag_MVPA_day_wei",          "Number of MVPA bouts - All days",
"Nblocks_day_IN_unbt_wei",          "Number of < 10 min IN fragments (unbouted) - All days",
"Nblocks_day_IN_bts_10_30_wei",     "Number of 10-30 min IN fragments - All days",
"Nblocks_day_IN_bts_30_wei",        "Number of > 30 min IN fragments - All days",
"Nblocks_day_LIG_unbt_wei",         "Number of < 10 min LIPA fragments (unbouted) - All days",
"Nblocks_day_LIG_bts_10_wei",       "Number of > 10 min LIPA fragments - All days",
"Nblocks_day_MVPA_unbt_wei",        "Number of < 10 min MVPA fragments (unbouted) - All days",
"Nblocks_day_MVPA_bts_10_wei",      "Number of > 10 min MVPA fragments - All days",
"FRAG_Nfrag_IN_day_WD",             "Number of IN bouts - Week days",
"FRAG_Nfrag_LIPA_day_WD",           "Number of LIPA bouts - Week days",
"FRAG_Nfrag_MVPA_day_WD",           "Number of MVPA bouts - Week days",
"Nblocks_day_IN_unbt_WD",           "Number of < 10 min IN fragments (unbouted) - Week days",
"Nblocks_day_IN_bts_10_30_WD",      "Number of 10-30 min IN fragments - Week days",
"Nblocks_day_IN_bts_30_WD",         "Number of > 30 min IN fragments - Week days",
"Nblocks_day_LIG_unbt_WD",          "Number of < 10 min LIPA fragments (unbouted) - Week days",
"Nblocks_day_LIG_bts_10_WD",        "Number of > 10 min LIPA fragments - Week days",
"Nblocks_day_MVPA_unbt_WD",         "Number of < 10 min MVPA fragments (unbouted) - Week days",
"Nblocks_day_MVPA_bts_10_WD",       "Number of > 10 min MVPA fragments - Week days",
"FRAG_Nfrag_IN_day_WE",             "Number of IN bouts - Weekend days",
"FRAG_Nfrag_LIPA_day_WE",           "Number of LIPA bouts - Weekend days",
"FRAG_Nfrag_MVPA_day_WE",           "Number of MVPA bouts - Weekend days",
"Nblocks_day_IN_unbt_WE",           "Number of < 10 min IN fragments (unbouted) - Weekend days",
"Nblocks_day_IN_bts_10_30_WE",      "Number of 10-30 min IN fragments - Weekend days",
"Nblocks_day_IN_bts_30_WE",         "Number of > 30 min IN fragments - Weekend days",
"Nblocks_day_LIG_unbt_WE",          "Number of < 10 min LIPA fragments (unbouted) - Weekend days",
"Nblocks_day_LIG_bts_10_WE",        "Number of > 10 min LIPA fragments - Weekend days",
"Nblocks_day_MVPA_unbt_WE",         "Number of < 10 min MVPA fragments (unbouted) - Weekend days",
"Nblocks_day_MVPA_bts_10_WE",       "Number of > 10 min MVPA fragments - Weekend days",
# Timing of the most 5 active hours
"M5TIME_num_wei",                   "Most active 5hrs timing - All days",
"M5TIME_num_WD",                    "Most active 5hrs timing - Week days",
"M5TIME_num_WE",                    "Most active 5hrs timing - Weekend days",
# Intensity gradient
"ig_gradient_wei",                  "Intensity gradient slope - All days",
"ig_intercept_wei",                 "Intensity gradient intercept - All days",
"ig_gradient_WD",                   "Intensity gradient slope - Week days",
"ig_intercept_WD",                  "Intensity gradient intercept - Week days",
"ig_gradient_WE",                   "Intensity gradient slope - Weekend days",
"ig_intercept_WE",                  "Intensity gradient intercept - Weekend days",
# Labels for transformed skewed variables
"log_ACC_day_mg_wei",              "Acceleration* (mg) - All days",
"log_ACC_day_mg_WD",               "Acceleration* (mg) - Week days",
"log_ACC_day_mg_WE",               "Acceleration* (mg) - Weekend days",
"sqrt_ACC_day_mg_wei",             "Acceleration* (mg) - All days",
"sqrt_ACC_day_mg_WD",              "Acceleration* (mg) - Week days",
"sqrt_ACC_day_mg_WE",              "Acceleration* (mg) - Weekend days",
"log_dur_day_total_MVPA_min_wei",  "Duration MVPA* (min/day) - All days",
"sqrt_dur_day_total_MVPA_min_wei", "Duration MVPA* (min/day) - All days",
"log_dur_day_total_MVPA_min_WD",   "Duration MVPA* (min/day) - Week days",
"sqrt_dur_day_total_MVPA_min_WD",  "Duration MVPA* (min/day) - Week days",
"log_dur_day_total_MVPA_min_WE",   "Duration MVPA* (min/day) - Weekend days",
"sqrt_dur_day_total_MVPA_min_WE",  "Duration MVPA* (min/day) - Weekend days",
"log_FRAG_mean_dur_IN_day_wei",     "Mean duration of IN bouts* - All days",
"sqrt_FRAG_mean_dur_IN_day_wei",    "Mean duration of IN bouts* - All days",
"log_FRAG_mean_dur_MVPA_day_wei",   "Mean duration of MVPA bouts* - All days",
"sqrt_FRAG_mean_dur_MVPA_day_wei",  "Mean duration of MVPA bouts* - All days",
"log_FRAG_mean_dur_IN_day_WD",      "Mean duration of IN bouts* - Week days",
"sqrt_FRAG_mean_dur_IN_day_WD",     "Mean duration of IN bouts* - Week days",
"log_FRAG_mean_dur_MVPA_day_WD",    "Mean duration of MVPA bouts* - Week days",
"sqrt_FRAG_mean_dur_MVPA_day_WD",   "Mean duration of MVPA bouts* - Week days",
"log_FRAG_mean_dur_IN_day_WE",      "Mean duration of IN bouts* - Weekend days",
"sqrt_FRAG_mean_dur_IN_day_WE",     "Mean duration of IN bouts* - Weekend days",
"log_FRAG_mean_dur_MVPA_day_WE",    "Mean duration of MVPA bouts* - Weekend days",
"sqrt_FRAG_mean_dur_MVPA_day_WE",   "Mean duration of MVPA bouts* - Weekend days",
"log_Nblocks_day_LIG_bts_10_wei",   "Number of > 10 min LIPA fragments* - All days",
"log_Nblocks_day_LIG_bts_10_wei",   "Number of > 10 min LIPA fragments* - All days",
"sqrt_Nblocks_day_MVPA_bts_10_wei", "Number of > 10 min MVPA fragments* - All days",
"sqrt_Nblocks_day_MVPA_bts_10_wei", "Number of > 10 min MVPA fragments* - All days",
"log_M5TIME_num_wei",               "Most active 5hrs timing* - All days",
"log_M5TIME_num_WD",                "Most active 5hrs timing* - Week days",
"log_M5TIME_num_WE",                "Most active 5hrs timing* - Weekend days",
"sqrt_M5TIME_num_wei",              "Most active 5hrs timing* - All days",
"sqrt_M5TIME_num_WD",               "Most active 5hrs timing* - Week days",
"sqrt_M5TIME_num_WE",               "Most active 5hrs timing* - Weekend days"
)
# > Join data and tab.name to have a clean version of variables
data_named <- data %>%
map(., ~ {
.x %>%
tidyr::gather(key = "var", value = "value", -stno) %>%
left_join(tab.name, by = "var") %>%
select(-var) %>%
tidyr::spread(key = "varname", value = "value")
})
# > Check variables names
data_named %>%
map_dfr(., ~{ data.frame(var = names(.x))}, .id = "dataset") %>%
filter(var != "stno",
!var %in% unique(tab.name$varname))
names(data_named$wei %>%
left_join(data_named$WD_WE, by = "stno"))
data_named$wei %>%
left_join(data_named$WD_WE, by = "stno") %>%
gather(key = "feature", value = "value", -stno) %>%
separate(feature, sep = " - ", into = c("feature", "day_type"))
# > Descriptive table of the (non-standardized) variables
desc.tab <- data_named$wei %>%
left_join(data_named$WD_WE, by = "stno") %>%
gather(key = "feature", value = "value", -stno) %>%
separate(feature, sep = " - ", into = c("feature", "day_type")) %>%
group_by(feature, day_type) %>%
summarise(mean = mean(value),
sd = sd(value),
min = min(value),
q25 = quantile(value, probs = c(0.25)),
q50 = quantile(value, probs = c(0.5)),
q75 = quantile(value, probs = c(0.75)),
max = max(value)) %>%
arrange(day_type)
View(desc.tab)
wilcox.test(data_named$WD$`Acceleration (mg) - Week days`, data_named$WE$`Acceleration (mg) - Weekend days`, paired = T)$p.value
